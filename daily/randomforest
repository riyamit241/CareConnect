from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report
from sklearn.preprocessing import LabelEncoder
import pandas as pd
import pickle
df = pd.read_csv(r"C:\Users\Riya\Desktop\EY Hackathon\daily\diabetes_glucose_dataset.csv")

label_encoder = LabelEncoder()
df['category'] = label_encoder.fit_transform(df['category'])

unique_categories = label_encoder.classes_
print("Unique Categories:", unique_categories) 

# Prepare the data
X = df[['FPG', 'PPG']]  # Features
y = df['category']      # Target variable

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a Random Forest Classifier
rf_model = RandomForestClassifier(n_estimators=100, random_state=42) 

# Train the model
rf_model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = rf_model.predict(X_test)

""""# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy:.2f}")
"""

"""#Save the trained model
with open('diabetes_daily.pkl', 'wb') as file:
    pickle.dump(rf_model, file)

# Load the model (optional)
with open('diabetes_daily.pkl', 'rb') as file:
    loaded_gnb_model = pickle.load(file)
"""